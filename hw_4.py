# -*- coding: utf-8 -*-
"""ДЗ4_Кравченко Сергій.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vYAtu86HA_hTc1PYwXeQDEUvxsF8aLkU

Вам можуть знадобитись такі символи:


Символ | Код
--- | ---
$\wedge$ | \\$\wedge\\$
$\vee$ | \\$\vee\\$
$\neg$ | \\$\neg\\$
$\rightarrow$ | \\$\rightarrow\\$
$\oplus$ | \\$\oplus\\$
$\equiv$ | \\$\equiv\\$
$\Leftrightarrow$ | \\$\Leftrightarrow\\$

## Завдання 1
Запишіть наступні висловлювання у математичній формі та складіть для них таблиці істиності:

a) “Морті прийде на вечірку (A) тоді й тільки тоді, коли Джесіка прийде на вечірку(B), а Рік не прийде(C)”.

A - Морті прийде\
B - Джесіка теж прийде\
C - Рік не прийде

Загальна формула:
$X = A $⇔ (B ∧ ¬C)

$$
\begin{array} {|r|r|}\hline
A & B & C & X \\ \hline
1 & 1 & 1 & 0 \\ \hline
0 & 1 & 1 & 1 \\ \hline
1 & 0 & 1 & 0 \\ \hline
0 & 0 & 1 & 1 \\ \hline
1 & 1 & 0 & 1 \\ \hline
0 & 1 & 0 & 0 \\ \hline
1 & 0 & 0 & 0 \\ \hline
0 & 0 & 0 & 1 \\ \hline
\end{array}
$$
"""

import pandas as pd

# Формула: X = A ↔ (B ∧ ¬C)

# Дані таблиці
data = {
    "A": [1, 0, 1, 0, 1, 0, 1, 0],
    "B": [1, 1, 0, 0, 1, 1, 0, 0],
    "C": [1, 1, 1, 1, 0, 0, 0, 0]
}

# DataFrame
truth_table = pd.DataFrame(data)

# Обчислюємо вираз (B ∧ ¬C)
truth_table["B ∧ ¬C"] = (truth_table["B"] & ~truth_table["C"]).astype(int)

# Обчислюємо вираз A ↔ (B ∧ ¬C)
truth_table["X"] = (truth_table["A"] == truth_table["B ∧ ¬C"]).astype(int)

# Знаходимо X
print(truth_table)

"""b) “Якщо ми успішно виконаємо домашнє завдання з математичної логіки (A), то ми отримаємо заліковий бал (B) або візьмемо участь у науковому семінарі (C), водночас якщо ми візьмемо участь у науковому семінарі і отримаємо заліковий бал, то достроково складемо іспит з математичної логіки (D)”.

A - успішно домашнє завдання \
B - отримаємо заліковий бал\
C - та участь у семінарі\
D - то складемо іспит

$X = (A→(B∨C))∧((C∧B)→D)$

$$
\begin{array} {|r|r|}\hline
A & B & C & D & X \\ \hline
1 & 1 & 1 & 1 & 1 \\ \hline
0 & 1 & 1 & 1 & 1 \\ \hline
1 & 0 & 1 & 1 & 1 \\ \hline
0 & 0 & 1 & 1 & 1 \\ \hline
1 & 1 & 0 & 1 & 1 \\ \hline
0 & 1 & 0 & 1 & 1 \\ \hline
1 & 0 & 0 & 1 & 0 \\ \hline
0 & 0 & 0 & 1 & 1 \\ \hline
1 & 1 & 1 & 0 & 0 \\ \hline
0 & 1 & 1 & 0 & 0 \\ \hline
1 & 0 & 1 & 0 & 1 \\ \hline
0 & 0 & 1 & 0 & 1 \\ \hline
1 & 1 & 0 & 0 & 1 \\ \hline
0 & 1 & 0 & 0 & 1 \\ \hline
1 & 0 & 0 & 0 & 1 \\ \hline  
0 & 0 & 0 & 0 & 1 \\ \hline
\end{array}
$$

## Завдання 2
Із 40 програмістів 18 володіють мовою Python, 19 — мовою С++, 21 — мовою Java. Відомо, що 10 програмістів знають одночасно Python і С++, 7 — Python і Java, 8 — C++ і Java. Троє програмістів не володіють жодною із мов Python, С++, Java. Знайти кількість програмістів, які одночасно знають усі три мови програмування.

### Позначимо:

- Загальна кількість програмістів $N = 40$
- $|P| = 18$
- $|C| = 19$
- $|J| = 21$
- $|P \cap C| = 10$
- $|P \cap J| = 7$
- $|C \cap J| = 8$
- $|P \cap C \cap J| = x$ (знають всі три мови)  
- Не знають жодної з мов: $3$

Загальна кількість програмістів, які знають хоча б одну мову:  
$N' = N - 3 = 37$

За формулою включення-виключення:  

$|P \cup C \cup J| = |P| + |C| + |J| - |P \cap C| - |P \cap J| - |C \cap J| + |P \cap C \cap J|$

Підставляємо відомі значення:  

$37 = 18 + 19 + 21 - 10 - 7 - 8 + x$

$37 = 33 + x \implies x = 37 - 33 = 4$

**Відповідь**: 4 програмісти одночасно знають усі три мови.
"""

# Загальна кількість
N = 40

# Кількість програмістів, які знають окремі мови
P = 18  # Python
C = 19  # C++
J = 21  # Java

# Кількість програмістів, які знають дві мови
P_and_C = 10  # Python і C++
P_and_J = 7   # Python і Java
C_and_J = 8   # C++ і Java

# Кількість програмістів, які не знають ні однієї мови
None_languages = 3

# Кількість програмістів, які знають хоча б одну мову
At_least_one = N - None_languages

# Обчислюємо кількість програмістів, які знають усі три мови
All_three = At_least_one - (P + C + J - P_and_C - P_and_J - C_and_J)

print("Кількість програмістів, які знають усі три мови програмування:", All_three)

